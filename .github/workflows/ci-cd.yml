name: Task Management Application CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 19
      uses: actions/setup-java@v1
      with:
        java-version: 19
        
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: task-app/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./task-app
      run: npm ci
      
    - name: Build frontend
      working-directory: ./task-app
      run: npm run build
      
    - name: Build backend with Maven
      working-directory: ./taskmanager
      run: ./mvnw clean package -DskipTests
      
    - name: Build with Docker Compose
      run: docker-compose -f docker-compose.yml build
      
    - name: Test with Docker Compose
      run: |
        docker-compose -f docker-compose.dev.yml up -d
        sleep 60
        curl -f http://localhost:8084/task-management/actuator/health || echo "Backend not ready"
        curl -f http://localhost:5174 || echo "Frontend not ready"
        docker-compose -f docker-compose.dev.yml down -v

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to production
      run: |
        echo "Production deployment would happen here"
        echo "Using docker-compose.yml for production setup"
        # docker-compose -f docker-compose.yml up -d
